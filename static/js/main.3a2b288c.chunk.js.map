{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextFrom","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","Color","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","AboutText","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a2b288c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextFrom(props) {\r\n    const handleUpperClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    };\r\n    const handleLowerClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    };\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    };\r\n    const handleCopyClick = () => {\r\n        let text = document.getElementById(\"Mytext\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleRemoveSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>{props.heading}</h1>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                    Textarea:\r\n                </label>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleOnChange}\r\n                    style={{ backgroundColor: props.mode === 'white', Color: props.mode === 'dark' ? 'white' : '#042743' }}\r\n                    id=\"Mytext\"\r\n                    rows=\"6\"\r\n                ></textarea>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary my-2\"\r\n                    onClick={handleUpperClick}\r\n                >\r\n                    ConvertToUpper\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mx-1 my-2\"\r\n                    onClick={handleLowerClick}\r\n                >\r\n                    ConvertToLower\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mx-1 my-2\"\r\n                    onClick={handleClearClick}\r\n                >\r\n                    ClearText\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mx-1 my-2\"\r\n                    onClick={handleCopyClick}\r\n                >\r\n                    CopyText\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mx-1 my-2\"\r\n                    onClick={handleRemoveSpaces}\r\n                >\r\n                    Remove Extra Spaces\r\n                </button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>\r\n                    {text.split(' ').length} words and {text.length} characters\r\n                </p>\r\n                <p>\r\n                    Approximate {0.008 * text.split(\"\").length} minutes will take time to\r\n                    read this texts\r\n                </p>\r\n                <h2>Text Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react'\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextToConvert\" AboutText=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n      <TextForm heading=\"Enter Your Text Below\" mode={mode}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}